import { UserGroup, UserGroupCdo, UserGroupQdo, UserGroupWithCategoryRdo } from '../model';
import { NameValueList, OffsetElementList } from '../../../shared';
/**
 * 검색 조건 사용자 그룹 목록 조회
 * @param userGroupQdo
 */
export declare function findUserGroupsByRdo(userGroupQdo: UserGroupQdo): Promise<OffsetElementList<UserGroupWithCategoryRdo>>;
/**
 * 검색 조건 사용자 그룹, 유저 수 목록 조회
 * @param userGroupQdo
 */
export declare function findUserGroupsWithUserCountByRdo(userGroupQdo: UserGroupQdo): Promise<OffsetElementList<UserGroupWithCategoryRdo>>;
/**
 * 현재 Cineroom 기준 사용자 그룹, 그룹 분야 목록 조회
 */
export declare function findUserGroupsByCineroom(): Promise<UserGroupWithCategoryRdo[]>;
/**
 * userGroupCategoryId로 사용자 그룹 목록 조회
 * @param userGroupCategoryId
 * @param enabled
 */
export declare function findUserGroupsByCategoryId(userGroupCategoryId: string, enabled: boolean): Promise<UserGroup[]>;
/**
 * 사용자 그룹 조회
 * @param userGroupId
 */
export declare function findUserGroupById(userGroupId: string): Promise<UserGroupWithCategoryRdo>;
/**
 * 사용자 그룹 생성
 * @param userGroupCdo
 */
export declare function registerUserGroup(userGroupCdo: UserGroupCdo): Promise<string>;
/**
 * 사용자 그룹 수정
 * @param userGroupId
 * @param nameValues
 */
export declare function modifyUserGroup(userGroupId: string, nameValues: NameValueList): Promise<void>;
/**
 * 사용자 그룹 삭제
 * @param userGroupIds
 */
export declare function removeUserGroup(userGroupIds: string[]): Promise<void>;
/**
 * 사용자 그룹 활성화
 * @param userGroupIds
 */
export declare function enableUserGroup(userGroupIds: string[]): Promise<void>;
/**
 * 사용자 그룹 비활성화
 * @param userGroupIds
 */
export declare function disableUserGroup(userGroupIds: string[]): Promise<void>;
