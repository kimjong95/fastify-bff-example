import { UserGroupCategory, UserGroupCategoryCdo, UserGroupCategoryQdo } from '../model';
import { NameValueList, OffsetElementList } from '../../../shared';
/**
 * 검색 조건 사용자 그룹 분야 목록 조회
 * @param userGroupCategoryQdo
 */
export declare function findAllUserGroupCategoriesByRdo(userGroupCategoryQdo: UserGroupCategoryQdo): Promise<OffsetElementList<UserGroupCategory>>;
/**
 * 현재 사용자의 사용자 그룹 분야 목록 조회
 * @param userGroupCategoryQdo
 */
export declare function findMyUserGroupCategoriesByRdo(userGroupCategoryQdo: UserGroupCategoryQdo): Promise<OffsetElementList<UserGroupCategory>>;
/**
 * 현재 Cineroom의 사용자 그룹 분야 목록 조회
 * @param userGroupCategoryQdo
 */
export declare function findCineroomsUserGroupCategoriesByRdo(userGroupCategoryQdo: UserGroupCategoryQdo): Promise<OffsetElementList<UserGroupCategory>>;
/**
 * 사용자 그룹 분야 조회
 * @param userGroupCategoryId
 */
export declare function findUserGroupCategoryById(userGroupCategoryId: string): Promise<UserGroupCategory>;
/**
 * 사용자 그룹 분야 생성
 * @param userGroupCategoryCdo
 */
export declare function registerUserGroupCategory(userGroupCategoryCdo: UserGroupCategoryCdo): Promise<string>;
/**
 * 사용자 그룹 분야 수정
 * @param userGroupCategoryId
 * @param nameValues
 */
export declare function modifyUserGroupCategory(userGroupCategoryId: string, nameValues: NameValueList): Promise<void>;
/**
 * 사용자 그룹 분야 삭제
 * @param userGroupCategoryIds
 */
export declare function removeUserGroupCategory(userGroupCategoryIds: string[]): Promise<void>;
/**
 * 사용자 그룹 분야 활성화
 * @param userGroupCategoryIds
 */
export declare function enableUserGroupCategory(userGroupCategoryIds: string[]): Promise<void>;
/**
 * 사용자 그룹 분야 비활성화
 * @param userGroupCategoryIds
 */
export declare function disableUserGroupCategory(userGroupCategoryIds: string[]): Promise<void>;
