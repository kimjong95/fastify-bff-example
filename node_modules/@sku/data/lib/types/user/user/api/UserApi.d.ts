import { NameValueList, OffsetElementList } from '../../../shared';
import { UserIdentityRdo } from '../../../learning';
import { AdditionalUserInfo, KeywordQdo, MinimumUserIdentityRdo, PisAgreement, PisAgreementSdo, PisAgreementsSdo, SmsSender, User, UserWithAdditionalInfoRdo } from '../model';
/**
 * 현재 사용자 조회
 */
export declare function findMy(): Promise<User>;
/**
 * denizenId로 유저 조회
 * @param denizenId
 */
export declare function findUser(denizenId: string): Promise<User>;
/**
 * denizenId로 Simple 유저 조회
 * @param denizenId
 */
export declare function findMinimumUserIdentityRdo(denizenId: string): Promise<MinimumUserIdentityRdo>;
/**
 * 현재 사용자의 유저 추가 정보 조회
 */
export declare function findMyAdditionalInfo(): Promise<AdditionalUserInfo>;
/**
 * 현재 사용자의 유저, 유저 추가 정보 조회
 */
export declare function findMyWithAdditionalInfo(): Promise<UserWithAdditionalInfoRdo>;
/**
 * denizenId 배열로 마스킹 유저 목록 조회
 * @param denizenIds
 */
export declare function findMaskingUsersByDenizenIds(denizenIds: string[]): Promise<User[]>;
/**
 * denizenId 배열로 Simple 유저 목록 조회
 * @param denizenIds
 */
export declare function findMinimumUserIdentityRdosByDenizenIds(denizenIds: string[]): Promise<MinimumUserIdentityRdo[]>;
/**
 * 현재 사용자 유저 수정
 * @param nameValues
 */
export declare function modifyMy(nameValues: NameValueList): Promise<void>;
/**
 * 현재 사용자 유저 추가 정보 수정
 * @param nameValues
 */
export declare function modifyAdditionalInfo(nameValues: NameValueList): Promise<void>;
/**
 * 동의서 생성
 * @param sdo
 */
export declare function registerPisAgreement(sdo: PisAgreementSdo): Promise<string>;
/**
 * 동의서 멀티 생성
 * @param sdos
 */
export declare function registerPisAgreements(sdos: PisAgreementsSdo): Promise<string[]>;
/**
 * 현재 사용자의 동의서 조회
 * @param agreementFormId
 * @param serviceId
 */
export declare function findMyPisAgreement(agreementFormId: string, serviceId: string): Promise<PisAgreement>;
/**
 * 현재 사용자의 동의서 목록 조회
 * @param agreementFormId
 * @param serviceIds
 */
export declare function findMyPisAgreements(agreementFormId: string, serviceIds: string[]): Promise<PisAgreement[]>;
/**
 * 암호화키 생성
 * @param cubeId
 * @param cardId
 */
export declare function generateEncryptionKey(cubeId: string, cardId: string): Promise<string>;
/**
 * 현재 사용자 SMS 발송자 조회
 */
export declare function findMySmsSender(): Promise<SmsSender>;
/**
 * keyword로 부서 유저 목록 조회
 * @param keyword
 */
export declare function findSameDepartmentUserIdentities(keyword: string): Promise<UserIdentityRdo[]>;
/**
 * 검색 조건 유저 목록 조회
 * @param keywordQdo
 */
export declare function findUserIdentitiesByKeyword(keywordQdo: KeywordQdo): Promise<OffsetElementList<UserIdentityRdo>>;
/**
 * 사용가능한 닉네임인지 확인
 * @param nickname
 */
export declare function checkNickname(nickname: string): Promise<void>;
/**
 * 이름/닉네임에 적절한 조사 선택
 * @param name
 */
export declare function addJosaToName(name: string, firstValue: string, secondValue: string): Promise<string>;
