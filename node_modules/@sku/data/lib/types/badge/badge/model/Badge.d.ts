import { DenizenKey, DomainEntity, GroupBasedAccessRule, LangSupport, PatronKey, PolyglotString } from '../../../shared';
import { BadgeCategory } from '../../category/model';
import { BadgeState } from './vo/BadgeState';
import { BadgeType } from './vo/BadgeType';
import { SimpleBadgeCategory } from './vo/SimpleBadgeCategory';
import { BadgeLevel } from './vo/BadgeLevel';
import { BadgeOpenRequest } from './vo/BadgeOpenRequest';
import { CardQm } from './vo/CardQm';
export interface Badge extends DomainEntity {
    patronKey: PatronKey;
    langSupports: LangSupport[];
    state: BadgeState;
    name: PolyglotString;
    forSelectedMember: boolean;
    type: BadgeType;
    categories: SimpleBadgeCategory[];
    level: BadgeLevel;
    issueAutomatically: boolean;
    additionalRequirementsNeeded: boolean;
    cooperatorId: string;
    plus: boolean;
    imagePath: PolyglotString;
    iconUrl: string;
    qualification: PolyglotString;
    acquisitionRequirements: PolyglotString;
    operator: DenizenKey;
    description: PolyglotString;
    tags: PolyglotString;
    cardIds: string[];
    relatedBadgeIds: string[];
    collegeId: string;
    openRequest: BadgeOpenRequest;
    registrantName: PolyglotString;
    registeredTime: number;
    learningTime: number;
    modifierName: PolyglotString;
    modifiedTime: number;
    searchable: boolean;
    groupBasedAccessRule: GroupBasedAccessRule;
    category: BadgeCategory;
    subCategories: BadgeCategory[];
    cards: CardQm[];
    relatedBadges: Badge[];
}
