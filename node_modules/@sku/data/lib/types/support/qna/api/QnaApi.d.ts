import { OffsetElementList } from '../../../shared';
import { QnaDetailRom, QnaRdo, QnaRom, QnaQuestion, QuestionAnswerSdo, QuestionSdo, SatisfactionCdo, QuestionWithUpToDateRdo } from '../model';
/**
 * 검색 조건 현재 사용자의 QnA 목록 조회
 * @param qnaRdo
 */
export declare function findMyQuestions(qnaRdo: QnaRdo): Promise<OffsetElementList<QnaQuestion>>;
export declare function findMyQuestionsWithUpToDate(qnaRdo: QnaRdo): Promise<OffsetElementList<QuestionWithUpToDateRdo>>;
/**
 * 검색 조건 현재 사용자에게 온 QnA 목록 조회
 * @param qnaRdo
 */
export declare function findQnasToMe(qnaRdo: QnaRdo): Promise<OffsetElementList<QnaRom>>;
/**
 * QnA 상세 조회
 * @param questionId
 */
export declare function findQnaByQuestionId(questionId: string): Promise<QnaDetailRom>;
/**
 * QnA 질문 생성
 * @param questionSdo
 */
export declare function registerQnaQuestion(questionSdo: QuestionSdo): Promise<string>;
/**
 * 만족도 조사
 * @param questionId
 * @param satisfactionCdo
 */
export declare function registerSatisfaction(questionId: string, satisfactionCdo: SatisfactionCdo): Promise<void>;
/**
 * QnA 질문 삭제
 * @param questionId
 */
export declare function removeQnaQuestion(questionId: string): Promise<void>;
/**
 * QnA 답변 생성
 * @param questionId
 * @param questionAnswerSdo
 */
export declare function registerQnaAnswer(questionId: string, questionAnswerSdo: QuestionAnswerSdo): Promise<string>;
/**
 * QnA 답변 삭제
 * @param questionId
 */
export declare function removeQnaAnswer(questionId: string): Promise<void>;
/**
 * 모바일 - 읽지 않은 새로운 문의답변이 있는지 확인
 */
export declare function existsUpToDateAnswerToMe(): Promise<boolean>;
