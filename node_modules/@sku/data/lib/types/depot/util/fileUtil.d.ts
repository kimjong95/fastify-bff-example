import { DiskFileViewModel } from '../disk/model';
import { ResultReadFile } from './fileUpload';
import { DepotFile, DepotFileViewModel } from '../depot/model';
export declare type BYTES_UNIT = 'B' | 'KB' | 'MB' | 'GB' | 'TB';
export declare const BYTES_PER_CHUNK: number;
export declare const BYTES_PER_CHUNK_20: number;
export declare const EXTENSION: {
    IMAGE: string;
    ARCHIVE: string;
    AUDIO: string;
    VIDEO: string;
    CODE: string;
    EXCEL: string;
    PPT: string;
    PDF: string;
    WORD: string;
};
export declare const EXTENSION_WHITELIST = "bmp|jpg|png|jpeg|gif|wmv|wav|wma|mp3|aac|mp4|avi|mkv|wmv|mov|xlsx|xls|xlsm|ppt|pptx|pdf|doc|docx|hwp|ipynb|csv|zip";
export declare const EXTENSION_UPLOADLIST = "xlsx|xls|xlsm|ppt|pptx|pdf|doc|docx|zip";
export declare enum ValidationType {
    MaxSize = "MaxSize",
    Extension = "Extension",
    Duplication = "Duplication"
}
export declare const TYPE: {
    IMAGE: {
        type: string;
        display: string;
    };
    ARCHIVE: {
        type: string;
        display: string;
    };
    AUDIO: {
        type: string;
        display: string;
    };
    VIDEO: {
        type: string;
        display: string;
    };
    CODE: {
        type: string;
        display: string;
    };
    EXCEL: {
        type: string;
        display: string;
    };
    PPT: {
        type: string;
        display: string;
    };
    PDF: {
        type: string;
        display: string;
    };
    WORD: {
        type: string;
        display: string;
    };
};
export declare function fileSlice(file: File | Blob): Blob[];
export declare function fileSlice2(file: File): Blob[];
export declare function isAllowableSize50MB(file: File): boolean;
export declare function isAllowableSize20MB(file: File | DiskFileViewModel | ResultReadFile): boolean;
export declare function getByteSize(size: number, unit?: BYTES_UNIT): number;
export declare function getFileSize(size: number): string;
export declare function getFileType(fileName: string): string;
export declare function getFileTypeDisplay(type: string): string;
export declare function download(depotFileId: string, fileName?: string): void;
export declare function imageToBase64(imagePath: string, callback: (base64: any) => void): Promise<void>;
export declare function validate(file: File | any, depotFiles: any[] | undefined, type: ValidationType, validValue: any): boolean;
export declare function validateSize(file: File | DepotFile | DepotFileViewModel | ResultReadFile, size: number): boolean;
export declare function validateExtension(file: File | DepotFile | DepotFileViewModel | ResultReadFile, extension: string): boolean;
export declare function convertFileSize(size: number): string;
