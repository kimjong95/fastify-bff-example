import { NameValueList, PatronKey } from '../../../shared';
import { DiskFile, InitialFileCdo } from '../model';
/**
 * 디스크 파일 목록 조회
 * @param diskDriveId
 * @param offset
 * @param limit
 * @param exceptAssigned
 */
export declare function findAllDiskFiles(diskDriveId: string, offset: number, limit: number, exceptAssigned: boolean): Promise<DiskFile[]>;
/**
 * 디스크 개수 조회
 * @param diskDriveId
 * @param exceptAssigned
 */
export declare function countAllDiskFilesByDrive(diskDriveId: string, exceptAssigned: boolean): Promise<number>;
/**
 * parentFolderId로 하위 디스크 파일 목록 조회
 * @param parentFolderId
 */
export declare function findDiskFiles(parentFolderId: string): Promise<DiskFile[]>;
/**
 * 디스크 파일 수정
 * @param diskFileId
 * @param nameValues
 */
export declare function modifyDiskFile(diskFileId: string, nameValues: NameValueList): Promise<void>;
/**
 * parentFolderId로 하위 디스크 파일 개수 조회
 * @param parentFolderId
 */
export declare function countAllDiskFiles(parentFolderId: string): Promise<number>;
/**
 * 삭제된 디스크 파일 목록 조회
 * @param patronKey
 */
export declare function findDeletedDiskFiles(patronKey: PatronKey): Promise<DiskFile[]>;
/**
 * 디스크 파일 삭제
 * @param diskFileId
 */
export declare function removeDiskFile(diskFileId: string): Promise<void>;
/**
 * 디스크 파일 영구 삭제
 * @param diskFileId
 */
export declare function removeDiskFilePermanently(diskFileId: string): Promise<void>;
/**
 * 디스크 파일 복원
 * @param diskFileId
 */
export declare function restoreDiskFile(diskFileId: string): Promise<void>;
/**
 * 디스크 초기 파일 생성
 * @param initialFileCdo
 */
export declare function registerInitialFile(initialFileCdo: InitialFileCdo): Promise<string>;
