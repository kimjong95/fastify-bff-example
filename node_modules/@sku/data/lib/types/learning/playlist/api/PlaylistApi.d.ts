import { NameValueList, OffsetElementList } from '../../../shared';
import { MyPlaylistQdo, MyPlaylistRdo, MyPlaylistType, Playlist, PlaylistCardAdditionSdo, PlaylistCdo, PlaylistDetailRdo, PlaylistQdo, PlaylistRecommendationSdo, PlaylistTopNRdo, UserIdentityRdo } from '../model';
/**
 * 현재 사용자가 만든 플레이 리슽트 목록 조회
 */
export declare function findPlaylistsMadeByMySelf(): Promise<Playlist[]>;
/**
 * 플레이 리스트에 Card추가
 * @param playlistCardAdditionSdo
 */
export declare function addCardsToPlaylists(playlistCardAdditionSdo: PlaylistCardAdditionSdo): Promise<void>;
/**
 * 플레이 리스트 생성
 * @param cdo
 */
export declare function registerPlaylist(cdo: PlaylistCdo): Promise<string>;
/**
 * denizenId로 플레이 리스트 전체 목록 조회
 * @param denizenId
 */
export declare function findMyPlaylistsByDenizenId(denizenId: string): Promise<MyPlaylistRdo[]>;
/**
 * denizenId로 플레이 리스트 조회
 * @param denizenId
 * @param offset
 * @param limit
 */
export declare function findMyPlaylistsOffsetElementListByDenizenId(denizenId: string, offset: number, limit: number): Promise<OffsetElementList<MyPlaylistRdo>>;
/**
 * 현재 사용자의 플레이 리스트에 추가
 * @param playlistId
 */
export declare function registerMyPlaylistByPlaylistId(playlistId: string): Promise<string>;
/**
 * 검색 조건 현재 사용자의 플레이 리스트 목록 조회
 * @param qdo
 */
export declare function findMyPlaylists(qdo: MyPlaylistQdo): Promise<OffsetElementList<MyPlaylistRdo>>;
/**
 * 검색 조건, 학습카드가 있는 현재 사용자의 플레이 리스트 목록
 * @param qdo
 */
export declare function findMyPlaylistsWithCards(qdo: MyPlaylistQdo): Promise<OffsetElementList<MyPlaylistRdo>>;
/**
 * 플레이 리스트 상세 조회
 * @param playlistId
 */
export declare function findPlaylistDetail(playlistId: string): Promise<PlaylistDetailRdo>;
/**
 * 현재 사용자의 플레이 리스트 삭제
 * @param myPlaylistId
 */
export declare function removeMyPlaylist(myPlaylistId: string): Promise<void>;
/**
 * 플레이 리스트 생성자 유저 정보 조회
 * @param playlistId
 * @param type
 */
export declare function findUserIdentitiesRelatedToPlaylist(playlistId: string, type: MyPlaylistType): Promise<UserIdentityRdo[]>;
/**
 * 플레이 리스트 수정
 * @param playlistId
 * @param nameValues
 */
export declare function modifyPlaylist(playlistId: string, nameValues: NameValueList): Promise<void>;
/**
 * 플레이 리스트 추천
 * @param playlistRecommendationSdo
 */
export declare function recommendPlaylist(playlistRecommendationSdo: PlaylistRecommendationSdo): Promise<void>;
/**
 * 검색 조건 플레이 리스트 목록 조회
 * @param playlistQdo
 */
export declare function findPlaylistsByQdo(playlistQdo: PlaylistQdo): Promise<OffsetElementList<MyPlaylistRdo>>;
/**
 * 상위 3위의 플레이 리스트 조회
 */
export declare function findTopPlaylists(): Promise<PlaylistTopNRdo>;
