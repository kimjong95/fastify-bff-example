import { CardCubeStudentPassRequest, CardRelatedStudentCdo, CardStudentQdo, CpLearningResultInCdo, CpLearningResultV2InCdo, CubeStudentQdo, MergeStudentResponse, PaidCourseStudentRdo, ReportGradeUdo, Student, StudentApprovalAdminQdo, StudentByAdminCdo, StudentLearningStateUdo, StudentModifyRoundUdo, StudentRegisterByAdminResponse, StudentRemoveRequest, StudentRemoveResponse, StudentWithUserIdentity, UserCardRelatedStudentsRdo, UserStudentQdo } from '../model';
import { CubeIdAndStudentCountRdo } from '../../card/model';
import { OffsetElementList, ProcessedResult, ProcessedResultMsg } from '../../../shared';
import { CardStudentSendEmailOrSms, CubeStudentSendEmailOrSms, StudentSendEmail } from '../../lecture/model';
/**
 * (카드 학생, 큐브 학생, 필수 선수 카드 학생) 조회
 * @param userDenizenId
 * @param cardId
 */
export declare function findUserCardRelatedStudents_Admin(userDenizenId: string, cardId: string): Promise<UserCardRelatedStudentsRdo>;
/**
 * 검색 조건 카드 학생 목록 조회
 * @param cardStudentQdo
 */
export declare function findCardStudent_Admin(cardStudentQdo: CardStudentQdo): Promise<OffsetElementList<StudentWithUserIdentity>>;
/**
 * 검색 조건 카드 학생 목록 조회
 * @param cardStudentQdo
 */
export declare function findCardStudentForExcelDownload_Admin(cardStudentQdo: CardStudentQdo): Promise<OffsetElementList<StudentWithUserIdentity>>;
/**
 * 검색 조건 큐브 학생 목록 조회
 * @param cubeStudentQdo
 */
export declare function findCubeStudent_Admin(cubeStudentQdo: CubeStudentQdo): Promise<OffsetElementList<StudentWithUserIdentity>>;
/**
 * 검색 조건 큐브 학생 목록 조회
 * @param cubeStudentQdo
 */
export declare function findCubeStudentForExcelDownload_Admin(cubeStudentQdo: CubeStudentQdo): Promise<OffsetElementList<StudentWithUserIdentity>>;
/**
 * 검색 조건 유저 학생 목록
 * @param userStudentQdo
 */
export declare function findUserStudents_Admin(userStudentQdo: UserStudentQdo): Promise<OffsetElementList<Student>>;
/**
 * 학생 추가 엑셀 업로드
 * @param studentByAdminCdos
 */
export declare function uploadByExcel_Admin(studentByAdminCdos: StudentByAdminCdo[]): Promise<StudentRegisterByAdminResponse>;
/**
 * 학생 Merge
 * @param previousDenizenId
 * @param denizenId
 */
export declare function mergeStudent_Admin(previousDenizenId: string, denizenId: string): Promise<MergeStudentResponse>;
/**
 * 학생에게 메일 보내기
 * @param studentSendEmail
 */
export declare function sendEmail_Admin(studentSendEmail: StudentSendEmail): Promise<void>;
/**
 * 카드 학생에게 메일 또는 문자 보내기
 * @param cardStudentSendEmailOrSms
 */
export declare function sendCardStudentEmailOrSms_Admin(cardStudentSendEmailOrSms: CardStudentSendEmailOrSms): Promise<void>;
/**
 * 큐브 학생에게 메일 또는 문자 보내기
 * @param cubeStudentSendEmailOrSms
 */
export declare function sendCubeStudentEmailOrSms_Admin(cubeStudentSendEmailOrSms: CubeStudentSendEmailOrSms): Promise<void>;
/**
 * 학생 학습 상태 수정
 * @param studentLearningStateUdo
 */
export declare function modifyStudentLearningState_Admin(studentLearningStateUdo: StudentLearningStateUdo): Promise<void>;
/**
 * 숙제 점수 입력
 * @param reportGradeUdo
 */
export declare function gradeReportByOperator_Admin(reportGradeUdo: ReportGradeUdo): Promise<void>;
/**
 * 학생 삭제
 * @param studentRemoveRequest
 */
export declare function removeStudentByIds_Admin(studentRemoveRequest: StudentRemoveRequest): Promise<StudentRemoveResponse>;
/**
 * Card 학생 차수 수정
 * @param studentModifyRoundUdo
 */
export declare function modifyCardStudentRound_Admin(studentModifyRoundUdo: StudentModifyRoundUdo): Promise<boolean>;
/**
 * 관련 학생 추가
 * @param cardRelatedStudentCdo
 */
export declare function registerRelatedStudents_Admin(cardRelatedStudentCdo: CardRelatedStudentCdo): Promise<boolean>;
/**
 * 관련 학생 추가 (back-end 통신 예상)
 * @param cardRelatedStudentCdo
 */
export declare function registerRelatedStudentsFromInterface_Admin(cardRelatedStudentCdo: CardRelatedStudentCdo): Promise<boolean>;
/**
 * 컨텐츠 제공자 학습 결과 추가
 * @param cpLearningResultInCdo
 */
export declare function registerCpLearningResult_Admin(cpLearningResultInCdo: CpLearningResultInCdo): Promise<ProcessedResult[]>;
/**
 * 컨텐츠 제공자 학습 결과 메시지 추가
 * @param cpLearningResultV2InCdo
 */
export declare function registerCpLearningResultMsg_Admin(cpLearningResultV2InCdo: CpLearningResultV2InCdo): Promise<ProcessedResultMsg[]>;
/**
 * cubeId 배열로 학생 수 목록 조회
 * @param cubeIds
 */
export declare function findStudentCountByCubeIds_Admin(cubeIds: string[]): Promise<CubeIdAndStudentCountRdo[]>;
/**
 * 검색 조건 유료 과정 학생 목록 조회
 * @param studentApprovalAdminQdo
 */
export declare function findPaidCourseStudent_Admin(studentApprovalAdminQdo: StudentApprovalAdminQdo): Promise<OffsetElementList<PaidCourseStudentRdo>>;
/**
 * 수강신청형 카드 학습자 큐브 포함 전체 이수 처리
 * @param cardCubeStudentPassRequest
 */
export declare function passCardStudentsIncludingCubes_Admin(cardCubeStudentPassRequest: CardCubeStudentPassRequest): Promise<boolean>;
