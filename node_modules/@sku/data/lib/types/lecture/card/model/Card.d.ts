import { DifficultyLevel, DomainEntity, GroupBasedAccessRule, LangSupport, PolyglotString } from '../../../shared';
import { CardType } from './vo/CardType';
import { PermittedCineroom } from './vo/PermittedCineroom';
import { CardState } from './vo/CardState';
import { CardCategory } from './vo/CardCategory';
import { LearningType } from './vo/LearningType';
import { EnrollmentCard } from './EnrollmentCard';
import { LiveCard } from './vo/LiveCard';
export interface Card extends DomainEntity {
    langSupports: LangSupport[];
    name: PolyglotString;
    learningType: LearningType;
    type: CardType;
    thumbnailImagePath: string;
    stampCount: number;
    simpleDescription: PolyglotString;
    additionalLearningTime: number;
    difficultyLevel: DifficultyLevel;
    searchable: boolean;
    tags: PolyglotString;
    categories: CardCategory[];
    permittedCinerooms: PermittedCineroom[];
    learningTime: number;
    cardState: CardState;
    cardStateModifiedTime: number;
    paid: boolean;
    groupBasedAccessRule: GroupBasedAccessRule;
    enrollmentCards: EnrollmentCard[];
    liveCard: LiveCard;
    mainCategory: CardCategory;
}
