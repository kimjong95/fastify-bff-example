import { DatePeriod, DifficultyLevel, GroupBasedAccessRule, LangSupport, PolyglotString, RepresentativeInstructor } from '../../../../shared';
import { PermittedCineroom } from '../vo/PermittedCineroom';
import { RelatedCard } from '../vo/RelatedCard';
import { LearningContentSdo } from './LearningContentSdo';
import { PrerequisiteCard } from '../vo/PrerequisiteCard';
import { EnrollmentCard } from '../EnrollmentCard';
import { CardCategory } from '../vo/CardCategory';
import { CardType } from '../vo/CardType';
import { LearningType } from '../vo/LearningType';
import { ApproverType } from '../vo/ApproverType';
import { BlendedChapter } from '../BlendedChapter';
import { Talk } from '../Talk';
export interface CardSdo {
    langSupports: LangSupport[];
    name: PolyglotString;
    learningType: LearningType;
    type: CardType;
    thumbnailImagePath: string;
    stampCount: number;
    simpleDescription: PolyglotString;
    additionalLearningTime: number;
    searchable: boolean;
    tags: PolyglotString;
    difficultyLevel: DifficultyLevel;
    categories: CardCategory[];
    permittedCinerooms: PermittedCineroom[];
    groupBasedAccessRule: GroupBasedAccessRule;
    enrollmentCards: EnrollmentCard[];
    restrictLearningPeriod: boolean;
    learningPeriod: DatePeriod;
    description: PolyglotString;
    instructors: RepresentativeInstructor[];
    relatedCards: RelatedCard[];
    cardOperator: string;
    learningContents: LearningContentSdo[];
    prerequisiteCards: PrerequisiteCard[];
    validLearningDate: number;
    fileBoxId: string;
    communityId: string;
    pisAgreementRequired: boolean;
    pisAgreementTitle: PolyglotString;
    pisAgreementDepotId: PolyglotString;
    sequentialStudyRequired: boolean;
    sendingMail: boolean;
    cancellationPenalty: string;
    mandatory: boolean;
    talks: Talk[];
    blendedChapters: BlendedChapter[];
    approverType: ApproverType;
    enrollmentRequired: boolean;
}
