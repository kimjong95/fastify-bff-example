import { EmailList, OffsetElementList } from '../../../shared';
import { EmailMemberRdo, Member, MemberIdentityMaskingRdo, MemberQdo, MemberSearchQdo, MemberSearchType } from '../model';
/**
 * 회사 코드로 멤버 목록 조회
 * @param companyCode
 */
export declare function findMembersByCompanyCode(companyCode: string): Promise<Member[]>;
/**
 * 활성화 멤머 목록 조회
 * @param query
 */
export declare function findActiveMembers(query: MemberQdo): Promise<OffsetElementList<Member>>;
/**
 * 부서코드로 멤버 목록 조회
 * @param departmentCode
 */
export declare function findMembersByDepartmentCode(departmentCode: string): Promise<Member[]>;
/**
 * EmployeeId 로 멤버 조회
 * @param employeeId
 */
export declare function findMemberByEmployeeId(employeeId: string): Promise<Member>;
/**
 * Id 로 멤버 조회
 * @param id
 */
export declare function findMemberById(id: string): Promise<Member>;
/**
 * Id 배열로 멤버 목록 조회
 * @param ids
 */
export declare function findMembersByIds(ids: string[]): Promise<Member[]>;
/**
 * Id 배열로 멤버 목록 조회 (CubePost 방식)
 * @param ids
 */
export declare function findMembersByIdsInPost(ids: string[]): Promise<Member[]>;
/**
 * AudienceId 로 멤버 조회
 * @param audienceId
 */
export declare function findMemberByAudienceId(audienceId: string): Promise<Member>;
/**
 * AudienceIds 배열로 멤버 목록 조회
 * @param audienceIds
 */
export declare function findMembersByAudienceIds(audienceIds: string[]): Promise<Member[]>;
/**
 * 회사코드, 검색 조건 멤버 목록 조회
 * @param companyCode
 * @param searchType
 * @param searchKey
 */
export declare function findMembersByCompanyCodeAndSearchKey(companyCode: string, searchType: MemberSearchType, searchKey: string): Promise<Member[]>;
/**
 * 검색 조건 멤버 목록 조회
 * @param rdo
 */
export declare function findMembersByRdo(rdo: MemberSearchQdo): Promise<OffsetElementList<Member>>;
/**
 * E-mail 배열로 Simple 멤버 정보 목록 조회
 * @param emailList
 */
export declare function findEmailMembers(emailList: EmailList): Promise<EmailMemberRdo[]>;
/**
 * ByDenizenId 배열로 PhotoUrl 목록 조회
 * @param denizenKeyIds
 */
export declare function findProfilePhotoUrlsByDenizenId(denizenKeyIds: string[]): Promise<string[]>;
/**
 * 현재 사용자의 CourseApprover 조회
 */
export declare function findMyCourseApprover(): Promise<Member>;
/**
 * 현재 사용자의 AplApprover 조회
 */
export declare function findMyAplApprover(): Promise<Member>;
/**
 * 부서 코드, KeyWord 검색 조건 Masking Simple 멤버 조회
 * @param departmentCode
 * @param keyword
 */
export declare function findMembersByDepartmentAndKeyword(departmentCode: string, keyword: string): Promise<MemberIdentityMaskingRdo[]>;
/**
 * 멤버 Merge
 * @param destinedId
 * @param mergedId
 * @param merger
 */
export declare function mergeMember(destinedId: string, mergedId: string, merger: string): Promise<void>;
