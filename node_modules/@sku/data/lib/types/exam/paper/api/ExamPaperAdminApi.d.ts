import { OffsetElementList } from '../../../shared';
import { CopyExamPaperUdo, ExamPaper, ExamPaperAdminRdo, ExamPaperSdo, ExamQuestion } from '../model';
/**
 * 시험지 생성
 * @param examPaperSdo
 */
export declare function registerExamPaper_Admin(examPaperSdo: ExamPaperSdo): Promise<string>;
/**
 * 시험지 복사
 * @param examPaperId
 * @param copyExamPaperUdo
 */
export declare function copyExamPaper_Admin(examPaperId: string, copyExamPaperUdo: CopyExamPaperUdo): Promise<string>;
/**
 * 시험지 조회
 * @param examPaperId
 */
export declare function findExamPaper_Admin(examPaperId: string): Promise<ExamPaper>;
/**
 * examPaperIds 배열로 시험지 목록 조회
 * @param examPaperIds
 */
export declare function findExamPapersByIds_Admin(examPaperIds: string[]): Promise<ExamPaper[]>;
/**
 * 검색 조건 시험지 목록 조회
 * @param examPaperAdminRdo
 */
export declare function searchExamPapers_Admin(examPaperAdminRdo: ExamPaperAdminRdo): Promise<OffsetElementList<ExamPaper>>;
/**
 * 시험 문제 목록 조회
 * @param examPaperId
 */
export declare function findExamQuestions_Admin(examPaperId: string): Promise<ExamQuestion[]>;
/**
 * 시험지 수정
 * @param examPaperId
 * @param examPaperSdo
 */
export declare function modifyExamPaper_Admin(examPaperId: string, examPaperSdo: ExamPaperSdo): Promise<void>;
/**
 * 시험지 최종본 반영
 * @param examPaperId
 */
export declare function modifyFinalCopy_Admin(examPaperId: string): Promise<void>;
/**
 * 시험지 삭제
 * @param examPaperId
 */
export declare function removeExamPaper_Admin(examPaperId: string): Promise<void>;
/**
 * 시험 문제 삭제
 * @param examPaperId
 * @param sequence
 */
export declare function removeExamQuestion_Admin(examPaperId: string, sequence: number): Promise<void>;
/**
 * 시험지 이름 중복 확인
 * @param examPaperId
 * @param title
 */
export declare function duplicateExamPaper_Admin(examPaperId: string, title: string): Promise<boolean>;
