import { OffsetElementList } from '../../../shared';
import { Comment, CommentCdo, CommentCountRdo, CommentLike, CommentLikeCdo, CommentLiked, CommentRdo, CommentSort, CommentUdo, PinCommentCdo, SubComment, SubCommentCdo, SubCommentUdo } from '../model';
/**
 * 댓글 생성
 * @param feedbackId
 * @param commentCdo
 */
export declare function registerComment(feedbackId: string, commentCdo: CommentCdo): Promise<string>;
/**
 * 댓글 수정
 * @param commentId
 * @param commentUdo
 */
export declare function modifyComment(commentId: string, commentUdo: CommentUdo): Promise<void>;
/**
 * 댓글 삭제
 * @param commentId
 */
export declare function removeComment(commentId: string): Promise<void>;
/**
 * 댓글 조회
 * @param commentId
 */
export declare function findComment(commentId: string): Promise<Comment>;
/**
 * 검색 조건 댓글 목록 조회
 * @param feedbackId
 * @param offset
 * @param limit
 * @param ascending
 * @param myComments
 * @param commentSort
 */
export declare function findComments(feedbackId: string, offset: number, limit: number, myComments?: boolean, commentSort?: CommentSort, ascending?: boolean): Promise<OffsetElementList<Comment>>;
/**
 * 검색 조건 댓글 목록 조회
 * @param commentRdo
 */
export declare function findCommentsByRdo(commentRdo: CommentRdo): Promise<OffsetElementList<Comment>>;
/**
 * 검색 조건 댓글 목록 조회
 * @param commentRdo
 */
export declare function findCommentsForExcel(commentRdo: CommentRdo): Promise<Comment[]>;
/**
 * feedbackId로 댓글 개수 조회
 * @param feedbackId
 */
export declare function countByFeedbackId(feedbackId: string): Promise<CommentCountRdo>;
/**
 * feedbackId로 현재 사용자의 댓글 개수 조회
 * @param feedbackId
 */
export declare function countMyCommentByFeedbackId(feedbackId: string): Promise<CommentCountRdo>;
/**
 * feedbackId 배열로 댓글 개수 조회
 * @param feedbackIds
 */
export declare function countByFeedbackIds(feedbackIds: string[]): Promise<CommentCountRdo[]>;
/**
 * feedbackId로 새로운 댓글 개수 조회
 * @param feedbackId
 */
export declare function countNewCommentByFeedbackId(feedbackId: string): Promise<CommentCountRdo>;
/**
 * feedbackId 배열로 새로운 댓글 개수 조회
 * @param feedbackIds
 */
export declare function countNewCommentByFeedbackIds(feedbackIds: string[]): Promise<CommentCountRdo>;
/**
 * feedbackId 배열로 새로운 댓글 그룹 개수 조회
 * @param feedbackIds
 */
export declare function findAllNewCommentCountGroup(feedbackIds: string[]): Promise<CommentCountRdo[]>;
/**
 * 대댓글 생성
 * @param commentId
 * @param subCommentCdo
 */
export declare function addSubComment(commentId: string, subCommentCdo: SubCommentCdo): Promise<string>;
/**
 * 대댓글 생성 대댓글 Id 반환
 * @param commentId
 * @param subCommentCdo
 */
export declare function addSubCommentReturningSubCommentId(commentId: string, subCommentCdo: SubCommentCdo): Promise<string>;
/**
 * 대댓글 수정
 * @param commentId
 * @param subCommentId
 * @param subCommenUdo
 */
export declare function modifySubComment(commentId: string, subCommentId: string, subCommenUdo: SubCommentUdo): Promise<void>;
/**
 * 대닷글 삭제
 * @param commentId
 * @param subCommentId
 */
export declare function removeSubComment(commentId: string, subCommentId: string): Promise<void>;
/**
 * 검색 조건 대댓글 목록 조회
 * @param commentId
 * @param offset
 * @param limit
 * @param ascending
 */
export declare function findSubComments(commentId: string, offset: number, limit: number, ascending?: boolean): Promise<OffsetElementList<SubComment>>;
/**
 * 대댓글 조회
 * @param subCommentId
 */
export declare function findSubComment(subCommentId: string): Promise<SubComment>;
/**
 * 댓글 좋아요
 * @param commentLikeCdo
 */
export declare function likeComment(commentLikeCdo: CommentLikeCdo): Promise<CommentLiked>;
/**
 * 대댓글 좋아요
 * @param commentLikeCdo
 */
export declare function likeSubComment(commentLikeCdo: CommentLikeCdo): Promise<CommentLiked>;
/**
 * feedbackId로 좋아요한 댓글 목록 조회
 * @param feedbackId
 */
export declare function findCommentLikeByFeedbackId(feedbackId: string): Promise<CommentLike[]>;
/**
 * 고정 댓글
 * @param commentId
 * @param pinCommentCdo
 */
export declare function pin(commentId: string, pinCommentCdo: PinCommentCdo): Promise<void>;
/**
 * 고정 댓글 취소
 * @param commentId
 */
export declare function unpin(commentId: string): Promise<void>;
