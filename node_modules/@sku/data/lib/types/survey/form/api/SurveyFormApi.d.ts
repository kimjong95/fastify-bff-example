import { NameValueList, OffsetElementList } from '../../../shared';
import { DesignState, QuestionCdo, Sequence, SurveyForm, SurveyFormCdo, SurveyFormRdo, SurveyQuestion } from '../model';
import { OrderedOffset } from '../../share/model';
import { QuestionCountRdo } from '../model/sdo/QuestionCountRdo';
/**
 * 설문 양식 생성
 * @param surveyFormCdo
 */
export declare function registerSurveyForm(surveyFormCdo: SurveyFormCdo): Promise<string>;
/**
 * 설문 양식 복사
 * @param surveyFormId
 */
export declare function copySurveyForm(surveyFormId: string): Promise<string>;
/**
 * 설문 양식 조회
 * @param surveyFormId
 */
export declare function findSurveyForm(surveyFormId: string): Promise<SurveyForm>;
/**
 * 설문 양식 질문 없이 조회
 * @param surveyFormId
 */
export declare function findSurveyFormWithoutQuestion(surveyFormId: string): Promise<SurveyForm>;
/**
 * 검색 조건 설문 양식 목록 조회
 * @param designState
 * @param orderedOffset
 */
export declare function findAllSurveyForm(designState: DesignState, orderedOffset: OrderedOffset): Promise<SurveyForm[]>;
/**
 * 검색 조건 설문 양식 목록 조회
 * @param surveyFormRdo
 */
export declare function findAllSurveyFormsByQuery(surveyFormRdo: SurveyFormRdo): Promise<OffsetElementList<SurveyForm>>;
/**
 * 설문 양식 개수 조회
 */
export declare function countAllSurveyForms(): Promise<number>;
/**
 * 설문 양식 수정
 * @param surveyFormId
 * @param nameValues
 */
export declare function modifySurveyForm(surveyFormId: string, nameValues: NameValueList): Promise<void>;
/**
 * 설문 양식 석제
 * @param surveyFormId
 */
export declare function removeSurveyForm(surveyFormId: string): Promise<void>;
/**
 * 관리번호(?) 여부 확인
 * @param managementNumber
 */
export declare function existsByManagementNumber(managementNumber: string): Promise<boolean>;
/**
 * 설문 질문 생성
 * @param surveyFormId
 * @param questionCdo
 */
export declare function registerSurveyQuestion(surveyFormId: string, questionCdo: QuestionCdo): Promise<void>;
/**
 * 설문 질문 수정
 * @param surveyFormId
 * @param questionId
 * @param nameValues
 */
export declare function modifyQuestion(surveyFormId: string, questionId: string, nameValues: NameValueList): Promise<void>;
/**
 * 설문 질문 순서 변경
 * @param surveyFormId
 * @param questionId
 * @param targetSequence
 */
export declare function arrangeQuestionSequence(surveyFormId: string, questionId: string, targetSequence: Sequence): Promise<void>;
/**
 * 설문 질문 삭제
 * @param surveyFormId
 * @param questionId
 */
export declare function removeSurveyQuestion(surveyFormId: string, questionId: string): Promise<void>;
/**
 * surveyFormId로 설문 질문 목록 조회
 * @param surveyFormId
 */
export declare function findQuestionsBySurveyFormId(surveyFormId: string): Promise<SurveyQuestion[]>;
/**
 * 설문 타이틀 개수 조회
 * @param title
 */
export declare function countSurveyTitle(title: string): Promise<number>;
/**
 * surveyCaseId로 설문 갯수 조회
 * @param surveyCaseIds
 */
export declare function findSimpleSurveyFormRdos(surveyCaseIds: string[]): Promise<QuestionCountRdo[] | undefined>;
